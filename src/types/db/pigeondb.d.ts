/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface AcceptedFriendship {
  id: Generated<string>;
  userId1: string;
  userId2: string;
}

export interface FriendshipRequest {
  created_at: Generated<Timestamp>;
  friendId: string;
  userId: string;
}

export interface Group {
  adminId: string;
  createdAt: Generated<Timestamp | null>;
  id: Generated<string>;
  isActive: Generated<boolean | null>;
  name: string;
}

export interface GroupMessage {
  created_at: Timestamp;
  group_id: string;
  id: Generated<string>;
  is_active: Generated<boolean>;
  message_id: string;
}

export interface Message {
  createdAt: Generated<Timestamp | null>;
  creatorId: string;
  expiryDate: Timestamp | null;
  id: Generated<string>;
  isFile: Generated<boolean>;
  messageBody: string;
  parentMessageId: string | null;
}

export interface MessageRecipient {
  groupId: string | null;
  id: Generated<string>;
  isRead: Generated<boolean | null>;
  messageId: string;
  recipientId: string;
}

export interface Profile {
  id: Generated<string>;
  initialized: Generated<boolean>;
  picture: Generated<string>;
  userId: string;
}

export interface User {
  created_at: Generated<Timestamp>;
  email: string;
  id: Generated<string>;
  password: string;
  username: string;
}

export interface DB {
  AcceptedFriendship: AcceptedFriendship;
  FriendshipRequest: FriendshipRequest;
  Group: Group;
  GroupMessage: GroupMessage;
  Message: Message;
  MessageRecipient: MessageRecipient;
  Profile: Profile;
  User: User;
}
